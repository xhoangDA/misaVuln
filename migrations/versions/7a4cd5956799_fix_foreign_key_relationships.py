# -*- coding: utf-8 -*-
"""fix_foreign_key_relationships

Revision ID: 7a4cd5956799
Revises: 63b9225da68b
Create Date: 2025-06-17 17:32:11.168410

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '7a4cd5956799'
down_revision = '63b9225da68b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Tạo bảng mới trước
    op.create_table('scan_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('start_date', sa.String(length=20), nullable=False),
    sa.Column('end_date', sa.String(length=20), nullable=False),
    sa.Column('scan_start_time', sa.DateTime(), nullable=True),
    sa.Column('scan_end_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('total_cves_found', sa.Integer(), nullable=True),
    sa.Column('total_technologies_scanned', sa.Integer(), nullable=True),
    sa.Column('vulnerabilities_found', sa.Integer(), nullable=True),
    sa.Column('critical_count', sa.Integer(), nullable=True),
    sa.Column('high_count', sa.Integer(), nullable=True),
    sa.Column('medium_count', sa.Integer(), nullable=True),
    sa.Column('low_count', sa.Integer(), nullable=True),
    sa.Column('error_log', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Di chuyển dữ liệu từ scan_session sang scan_sessions nếu bảng tồn tại
    connection = op.get_bind()
    try:
        connection.execute("INSERT INTO scan_sessions SELECT * FROM scan_session")
    except:
        pass  # Bỏ qua nếu bảng cũ không tồn tại
    
    op.create_table('vulnerability_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('cve_id', sa.Integer(), nullable=False),
    sa.Column('technology_name', sa.String(length=255), nullable=False),
    sa.Column('technology_version', sa.String(length=50), nullable=True),
    sa.Column('technology_category', sa.String(length=100), nullable=True),
    sa.Column('technology_vendor', sa.String(length=255), nullable=True),
    sa.Column('project_name', sa.String(length=255), nullable=True),
    sa.Column('manager_name', sa.String(length=255), nullable=True),
    sa.Column('cve_identifier', sa.String(length=20), nullable=False),
    sa.Column('cvss_score', sa.Float(), nullable=True),
    sa.Column('cvss_severity', sa.String(length=20), nullable=True),
    sa.Column('published_date', sa.String(length=50), nullable=True),
    sa.Column('attack_vector', sa.String(length=20), nullable=True),
    sa.Column('attack_complexity', sa.String(length=20), nullable=True),
    sa.Column('privileges_required', sa.String(length=20), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('match_type', sa.String(length=255), nullable=True),
    sa.Column('risk_assessment', sa.String(length=20), nullable=True),
    sa.Column('mitigation_status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cve_id'], ['cve.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['scan_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Di chuyển dữ liệu từ vulnerability_report sang vulnerability_reports nếu có
    try:
        connection.execute("""
            INSERT INTO vulnerability_reports 
            (id, session_id, cve_id, technology_name, technology_version, technology_category, 
             technology_vendor, project_name, manager_name, cve_identifier, cvss_score, 
             cvss_severity, published_date, attack_vector, attack_complexity, privileges_required,
             confidence_score, match_type, risk_assessment, mitigation_status, created_at, updated_at)
            SELECT id, session_id, cve_id, technology_name, technology_version, technology_category,
                   technology_vendor, project_name, manager_name, cve_identifier, cvss_score,
                   cvss_severity, published_date, attack_vector, attack_complexity, privileges_required,
                   confidence_score, match_type, risk_assessment, mitigation_status, created_at, updated_at
            FROM vulnerability_report
        """)
    except:
        pass  # Bỏ qua nếu bảng cũ không tồn tại hoặc cấu trúc khác
    
    # Xóa bảng cũ cuối cùng (sau khi đã di chuyển dữ liệu)
    try:
        op.drop_table('vulnerability_report')
    except:
        pass
    try:
        op.drop_table('scan_session')
    except:
        pass
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('vulnerability_report',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('session_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('technology_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cve_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('confidence_score', mysql.FLOAT(), nullable=True),
    sa.Column('match_type', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('risk_assessment', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('mitigation_status', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('notes', mysql.TEXT(), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.Column('updated_at', mysql.DATETIME(), nullable=True),
    sa.Column('technology_name', mysql.VARCHAR(length=255), server_default=sa.text(u"''"), nullable=False),
    sa.Column('technology_version', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('technology_category', mysql.VARCHAR(length=100), nullable=True),
    sa.Column('technology_vendor', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('project_name', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('manager_name', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('cve_identifier', mysql.VARCHAR(length=20), server_default=sa.text(u"''"), nullable=False),
    sa.Column('cvss_score', mysql.FLOAT(), nullable=True),
    sa.Column('cvss_severity', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('published_date', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('attack_vector', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('attack_complexity', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('privileges_required', mysql.VARCHAR(length=20), nullable=True),
    sa.ForeignKeyConstraint(['cve_id'], [u'cve.id'], name=u'vulnerability_report_ibfk_1'),
    sa.ForeignKeyConstraint(['session_id'], [u'scan_session.id'], name=u'vulnerability_report_ibfk_2'),
    sa.ForeignKeyConstraint(['technology_id'], [u'technology.id'], name=u'vulnerability_report_ibfk_3'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate=u'utf8mb4_0900_ai_ci',
    mysql_default_charset=u'utf8mb4',
    mysql_engine=u'InnoDB'
    )
    op.create_table('scan_session',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=200), nullable=False),
    sa.Column('start_date', mysql.VARCHAR(length=20), nullable=False),
    sa.Column('end_date', mysql.VARCHAR(length=20), nullable=False),
    sa.Column('scan_start_time', mysql.DATETIME(), nullable=True),
    sa.Column('scan_end_time', mysql.DATETIME(), nullable=True),
    sa.Column('status', mysql.VARCHAR(length=20), nullable=True),
    sa.Column('total_cves_found', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_technologies_scanned', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vulnerabilities_found', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('critical_count', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('high_count', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('medium_count', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('low_count', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('error_log', mysql.TEXT(), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate=u'utf8mb4_0900_ai_ci',
    mysql_default_charset=u'utf8mb4',
    mysql_engine=u'InnoDB'
    )
    op.drop_table('vulnerability_reports')
    op.drop_table('scan_sessions')
    # ### end Alembic commands ###
